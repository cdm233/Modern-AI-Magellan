name: Deploy React App to EC2

on:
  push:
    branches:
      - main  # Trigger on push to the "main" branch

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    # Step 1: Check out the repository
    - name: Checkout code
      uses: actions/checkout@v3

    # Step 2: Set up Node.js
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '16'

    # Step 3: Navigate to the frontend folder and install dependencies
    - name: Install dependencies
      run: npm install --legacy-peer-deps
      working-directory: ./frontend  # Specify the frontend directory

    # Step 4: Build the React app
    - name: Build the app
      run: npm run build
      working-directory: ./frontend  # Specify the frontend directory

    # Step 5: Upload the build files to a temporary directory on EC2
    - name: Copy files to a temporary directory on EC2
      uses: appleboy/scp-action@v0.1.3
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USER }}
        key: ${{ secrets.EC2_KEY }}
        source: "frontend/build/*"  # Point to the build directory in the frontend folder
        target: "/home/ubuntu/tmp_build/${{ github.sha }}"  # Temporary directory to store files
        overwrite: true

    - name: Move files to the final directory with sudo
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USER }}
        key: ${{ secrets.EC2_KEY }}
        script: sudo rsync -av --delete /home/ubuntu/tmp_build/ /home/ubuntu/capstone/
    
    - name: Change ownership
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USER }}
        key: ${{ secrets.EC2_KEY }}
        script: sudo chown -R www-data:www-data /home/ubuntu/capstone/

    - name: Restart Nginx on EC2
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USER }}
        key: ${{ secrets.EC2_KEY }}
        script: |
          sudo systemctl restart nginx  # Or the appropriate command for your web server
